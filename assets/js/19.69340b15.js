(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{614:function(t,a,s){"use strict";s.r(a);var n=s(17),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" slice "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  array unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pointer\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("cap")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[t._v("#")]),t._v(" 创建")]),t._v(" "),s("ol",[s("li",[t._v("创建切片时，如果只指定长度，那么切片的容量和长度相等；")]),t._v(" "),s("li",[t._v("不允许创建容量小于长度的切片；")]),t._v(" "),s("li",[t._v("nil 切片 var s []int，地址指针固定为 0x0；空切片 var s = []int or s = []int{}，地址指针为固定值；对 nil 切片和空切片调用 appen/len/cap 的效果是一样的；")]),t._v(" "),s("li",[t._v("对于底层数组容量是 k 的切片 slice[i:j] 来说，长度=j-i，容量=k-i；")]),t._v(" "),s("li",[t._v("对于底层数组容量是 m 的切片 slice[i:j:k]，长度=j-i，容量=k-i，如果试图设置的容量比可用的容量还大 k > m，就会 panic。")])]),t._v(" "),s("h2",{attrs:{id:"扩容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩容"}},[t._v("#")]),t._v(" 扩容")]),t._v(" "),s("h3",{attrs:{id:"step-1-预估扩容后的容量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-1-预估扩容后的容量"}},[t._v("#")]),t._v(" Step 1：预估扩容后的容量")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("newcap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" old"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("cap")]),t._v("\ndoublecap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" newcap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" newcap\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("cap")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" doublecap "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tnewcap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("cap")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" old"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("cap")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tnewcap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" doublecap\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Check 0 < newcap to detect overflow and prevent an infinite loop.")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" newcap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" newcap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("cap")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tnewcap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" newcap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set newcap to the requested cap when the newcap calculation overflowed.")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" newcap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tnewcap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("cap")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"step-2-匹配合适的内存规格-内存对齐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-2-匹配合适的内存规格-内存对齐"}},[t._v("#")]),t._v(" Step 2：匹配合适的内存规格（内存对齐）")]),t._v(" "),s("h2",{attrs:{id:"注意点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意点"}},[t._v("#")]),t._v(" 注意点")]),t._v(" "),s("ol",[s("li",[t._v("扩容会创建新的底层数组，如果在创建切片时设置切片的容量和长度一样，就可以强制让新切片的第一个 append 操作创建新的底层数组，与原有的底层数组分离；")]),t._v(" "),s("li",[t._v("range 会复制 slice 进行循环；")]),t._v(" "),s("li",[t._v("slice 非并发安全，解决方法：\n"),s("ol",[s("li",[t._v("互斥锁；")]),t._v(" "),s("li",[t._v("通过 channel 传递数据；")]),t._v(" "),s("li",[t._v("指定下标。")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);